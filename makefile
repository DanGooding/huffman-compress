
# makefile adapted from https://stackoverflow.com/a/34587043

TARGET_NAMES := huffman bitstringtest heaptest writeutilstest

huffman_SRC = huffman.c bitstring.c heap.c writeutils.c
bitstringtest_SRC := bitstringtest.c bitstring.c writeutils.c
heaptest_SRC := heaptest.c heap.c
writeutilstest_SRC := writeutilstest.c writeutils.c

SRCDIR = src
OBJDIR = obj
DEPDIR = .d
BINDIR = bin

CC := gcc
CFLAGS := -g -Wall

$(shell mkdir -p $(OBJDIR) $(DEPDIR) $(BINDIR) >/dev/null)

# the binaries to output
TARGETS = $(patsubst %,$(BINDIR)/%,$(TARGET_NAMES))
# all .c files
ALLSRC := $(foreach T,$(TARGET_NAMES),$($T_SRC))

# allow `make name`, and get bash completion
$(TARGET_NAMES) : % : $(BINDIR)/%

# build targets by compiling the files listed in their target_SRC variable
.SECONDEXPANSION:
$(TARGETS) : $(BINDIR)/% : $$(addsuffix .o, $$(addprefix $(OBJDIR)/, $$(basename $$($$*_SRC))))
	$(LINK.c) $^ -o $@

.PHONY: all
all: $(TARGETS)

.PHONY: clean
clean: 
	rm -f $(TARGETS) $(OBJDIR)/*.o $(DEPDIR)/*.d

# -----
# Advanced auto-dependency, from:
# http://make.mad-scientist.net/papers/advanced-auto-dependency-generation/

# .d dependency files generated by compiler (makefiles with rules for .c and .h)
# temporarily saved to .Td since killing the build partway can
# leave them corrupted.
# they are then moved to .d when done

DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.Td

COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
POSTCOMPILE = mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d

# cancel original rule
%.o : %.c
# define new rule, producing .o and .Td, then moving .Td to .d
$(OBJDIR)/%.o : $(SRCDIR)/%.c $(DEPDIR)/%.d
	$(COMPILE.c) $(OUTPUT_OPTION) $<
	$(POSTCOMPILE)

$(DEPDIR)/%.d: ;
.PRECIOUS: $(DEPDIR)/%.d

# include .d files
-include $(patsubst %,$(DEPDIR)/%.d,$(basename $(ALLSRC)))
